[{"C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\index.js":"1","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\App.js":"2","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\pages\\Home.js":"3","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\pages\\InteractiveMap.js":"4","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\pages\\LeafletMap.js":"5","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\context\\WaterContext.js":"6","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\pages\\LocationWaterData.js":"7","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\components\\LocationInfoPopup.js":"8","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\components\\Legend.js":"9","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\components\\Menu.js":"10","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\components\\StandingPlace.js":"11","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\components\\NameCard.js":"12","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\components\\InfoAccordian.js":"13","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\components\\WelcomeModal.js":"14"},{"size":220,"mtime":1614370610232,"results":"15","hashOfConfig":"16"},{"size":2545,"mtime":1614370591917,"results":"17","hashOfConfig":"16"},{"size":8550,"mtime":1614373161783,"results":"18","hashOfConfig":"16"},{"size":6300,"mtime":1613337360860,"results":"19","hashOfConfig":"16"},{"size":7343,"mtime":1614303305691,"results":"20","hashOfConfig":"16"},{"size":482,"mtime":1613337497712,"results":"21","hashOfConfig":"16"},{"size":11996,"mtime":1614203494014,"results":"22","hashOfConfig":"16"},{"size":924,"mtime":1612447433816,"results":"23","hashOfConfig":"16"},{"size":1478,"mtime":1614304775839,"results":"24","hashOfConfig":"16"},{"size":1156,"mtime":1612047009031,"results":"25","hashOfConfig":"16"},{"size":687,"mtime":1612472969358,"results":"26","hashOfConfig":"16"},{"size":1691,"mtime":1614302875206,"results":"27","hashOfConfig":"16"},{"size":5882,"mtime":1614207044681,"results":"28","hashOfConfig":"16"},{"size":2414,"mtime":1614372452400,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oe561x",{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\index.js",[],"C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\App.js",["65","66","67","68","69"],"C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\pages\\Home.js",["70","71","72","73","74","75","76","77","78"],"C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\pages\\InteractiveMap.js",["79","80","81","82","83","84","85","86","87","88"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../logo.svg';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\n// UI\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\n\r\n// COMPONENTS\r\nimport { Menu } from '../components/Menu';\r\nimport { LocationInfoPopup } from '../components/LocationInfoPopup';\r\nimport { Legend } from '../components/Legend';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport greenIcon from '../images/green_water_icon.png'; \r\nimport yellowIcon from '../images/yellow_water_icon.png';\r\nimport redIcon from '../images/red_water_icon.png';\r\n\r\n// CONTEXT\r\nimport { WaterContext } from '../context/WaterContext';\r\n\r\nexport const InteractiveMap = (props) => {\r\n    const { locations, getLocations } = useContext(WaterContext);\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [viewport, setViewport] = useState({\r\n        latitude: 36.7783, \r\n        longitude: -119.4179, \r\n        zoom: 5, \r\n        width: \"100vw\", \r\n        height: \"100vh\",\r\n    });\r\n    const [selectedLocation, setSelectedLocation] = useState(null);\r\n    const [selectedLocationID, setSelectedLocationID] = useState(\"\");\r\n\r\n    const determineRisk = (percentile) => {\r\n        if (percentile >= 60) {\r\n            return (\r\n                <img src={redIcon} style={{ height: 30 }} />\r\n            )\r\n        } else if (percentile <= 60 & percentile >= 10) {\r\n            return (\r\n                <img src={yellowIcon} style={{ height: 30 }} />\r\n            )\r\n        } else if (percentile <= 10) {\r\n            return (\r\n                <img src={greenIcon} style={{ height: 30 }} />\r\n            )\r\n        } else {\r\n            return \"Error\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <Drawer \r\n                anchor='left' \r\n                open={menuOpen} \r\n                onClose={() => setMenuOpen(false)}\r\n                style={{ overflow: 'hidden' }}\r\n            >\r\n                <div>\r\n                    <div className=\"row\">\r\n                        <MenuRoundedIcon\r\n                            style={{ fontSize: 30, marginLeft: 15, marginTop: 10 }}\r\n                            onClick={() => setMenuOpen(false)}\r\n                        ></MenuRoundedIcon>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <img src={logo} className=\"menu-logo\" />\r\n                        <h1 className=\"menu-header\">PURIFY</h1>\r\n                        <div className=\"menu-buttons-container\">\r\n                            <Link to=\"/\" className=\"menu-buttons\">HOME</Link>\r\n                            <Link to=\"/map\" className=\"menu-buttons\">WATER MAP</Link>\r\n                        </div>\r\n                    </div>\r\n                    <p \r\n                        className=\"menu-water-header\"\r\n                        style={{ textAlign: \"center\", marginTop: 40, fontSize: 14 }}\r\n                    >\r\n                        CA Water Data Challenge\r\n                    </p>\r\n                    <p \r\n                        className=\"menu-names\"\r\n                        style={{ textAlign: \"center\", margin: 15, fontSize: 14 }}\r\n                    >\r\n                        Ansh Motiani, Aditya Gupta, <br /> Samhith Kakarla\r\n                    </p>\r\n                </div>\r\n            </Drawer>\r\n            <ReactMapGL \r\n                {...viewport}\r\n                mapboxApiAccessToken=\"pk.eyJ1Ijoic2tha2FybGEiLCJhIjoiY2tra2R6OXd6MDFlczJwbGpydzQ4anluYyJ9.N10YB_-af_8C_VwmNxyqYw\"\r\n                mapStyle=\"mapbox://styles/skakarla/ckkke1moj2q2h17qqrot5m99a\"\r\n                onViewportChange={(viewport) => setViewport(viewport)}\r\n            >\r\n                <MenuRoundedIcon\r\n                    style={{ fontSize: 50, marginLeft: 30, marginTop: 10 }}\r\n                    onClick={() => setMenuOpen(false)}\r\n                ></MenuRoundedIcon>\r\n                <Legend />\r\n                {locations ? Object.values(locations).map((location) => {\r\n                    const currentIndex = Object.values(locations).indexOf(location);\r\n                    const locationID = Object.keys(locations)[currentIndex]; \r\n                    if (location[\"Latitude\"] === null) {\r\n                        return \"\"\r\n                    } else {\r\n                        return (\r\n                            <Marker key={locationID} latitude={location[\"Latitude\"]} longitude={location[\"Longitude\"]}>\r\n                                <IconButton color=\"primary\" disableFocusRipple={true} onClick={() => {\r\n                                    setSelectedLocation(location); \r\n                                    setSelectedLocationID(location[\"PWSID\"]);\r\n                                    console.log(location);\r\n                                    console.log(locationID);\r\n                                }}>\r\n                                    {determineRisk(location[\"Percentile\"])}\r\n                                </IconButton>\r\n                            </Marker>\r\n                        )\r\n                    }\r\n                }) : \"\"}\r\n                {selectedLocation ? (\r\n                    <Popup\r\n                        latitude={selectedLocation[\"Latitude\"]}\r\n                        longitude={selectedLocation[\"Longitude\"]}\r\n                        onClose={() => {\r\n                        setSelectedLocation(null);\r\n                        }}\r\n                    >\r\n                        <LocationInfoPopup \r\n                            name={selectedLocation[\"Native Name\"]} \r\n                            rank={selectedLocation[\"Rank\"]}\r\n                            totalRank={selectedLocation[\"Total Rank\"]}\r\n                            violations={selectedLocation[\"Native Violations\"]}\r\n                            selectedLocationID={selectedLocationID.toString()}\r\n                        />\r\n                    </Popup>\r\n                ) : null}\r\n            </ReactMapGL>\r\n        </div>\r\n    )\r\n}\r\n",["89","90"],"C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\pages\\LeafletMap.js",["91","92","93","94","95"],"import React, { useState, useContext } from 'react'; \r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\n// UI\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\n\r\n// COMPONENTS\r\nimport { MapContainer, Popup, TileLayer, Marker } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport { LocationInfoPopup } from '../components/LocationInfoPopup';\r\nimport { Legend } from '../components/Legend';\r\nimport logo from '../logo.svg';\r\nimport redWater from './red_water_icon.png'; \r\nimport greenWater from './green_water_icon.png'; \r\nimport yellowWater from './yellow_water_icon.png'; \r\nimport grayWater from './gray_water_icon.png'; \r\n\r\n// CONTEXT\r\nimport { WaterContext } from '../context/WaterContext';\r\nimport { requirePropFactory } from '@material-ui/core';\r\n\r\n\r\nexport const LeafletMap = () => {\r\n    const { locations } = useContext(WaterContext); \r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [selectedLocation, setSelectedLocation] = useState(null);\r\n    const [selectedLocationID, setSelectedLocationID] = useState(\"\");\r\n\r\n    const determineRisk = (percentile, checks) => {\r\n        if (checks === 0.0) {\r\n            const grayIcon = new L.Icon({\r\n                iconUrl: grayWater, \r\n                iconSize: [25, 35], \r\n            });\r\n            \r\n            return grayIcon; \r\n        } else if (percentile >= 60) {\r\n            const redIcon = new L.Icon({\r\n                iconUrl: redWater, \r\n                iconSize: [25, 35], \r\n            });\r\n\r\n            return redIcon; \r\n        } else if (percentile <= 60 & percentile >= 10) {\r\n            const yellowIcon = new L.Icon({\r\n                iconUrl: yellowWater, \r\n                iconSize: [25, 35], \r\n            });\r\n            \r\n            return yellowIcon; \r\n        } else if (percentile <= 10) {\r\n            const greenIcon = new L.Icon({\r\n                iconUrl: greenWater, \r\n                iconSize: [25, 35], \r\n            });\r\n            \r\n            return greenIcon; \r\n        } else {\r\n            return \"Error\"\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Drawer \r\n                anchor='left' \r\n                open={menuOpen} \r\n                onClose={() => setMenuOpen(false)}\r\n                style={{ overflow: 'hidden' }}\r\n            >\r\n                <div>\r\n                    <div className=\"row\">\r\n                        <MenuRoundedIcon\r\n                            className=\"menu-icon\"\r\n                            style={{ fontSize: 30 }}\r\n                            onClick={() => setMenuOpen(false)}\r\n                        ></MenuRoundedIcon>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <img src={logo} className=\"menu-logo\" />\r\n                        <h1 className=\"menu-header\">PURIFY</h1>\r\n                        <div className=\"menu-buttons-container\">\r\n                            <Link to=\"/\" className=\"menu-buttons\">HOME</Link>\r\n                            <Link to=\"/map\" className=\"menu-buttons\">WATER MAP</Link>\r\n                        </div>\r\n                    </div>\r\n                    <p \r\n                        className=\"menu-water-header\"\r\n                    >\r\n                        CA Water Data Challenge\r\n                    </p>\r\n                    <p \r\n                        className=\"menu-names\"\r\n                    >\r\n                        Ansh Motiani, Aditya Gupta, <br /> Samhith Kakarla\r\n                    </p>\r\n                </div>\r\n            </Drawer>\r\n            \r\n            <div className=\"map-info-container\">\r\n                <div>\r\n                    <div className=\"row\">\r\n                        <MenuRoundedIcon\r\n                            style={{ fontSize: 30, marginLeft: 15, marginTop: 10 }}\r\n                            onClick={() => setMenuOpen(true)}\r\n                        ></MenuRoundedIcon>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <img src={logo} className=\"map-logo\" />\r\n                        <h1 className=\"map-header\">PURIFY</h1>\r\n                    </div>\r\n                    <p style={{ textAlign: \"center\", marginTop: 20 }}>CA Water Data Challenge</p>\r\n                    <Legend />\r\n                </div>\r\n            </div>\r\n\r\n            <MapContainer center={[36.7783, -119.4179]} zoom={6} className=\"leaflet-map-container\">\r\n                <TileLayer\r\n                    url=\"https://api.maptiler.com/maps/basic/{z}/{x}/{y}@2x.png?key=O6Gasq5pOk061crD9m5G\"\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                />\r\n                {locations ? Object.values(locations).map((location) => {\r\n                    const currentIndex = Object.values(locations).indexOf(location);\r\n                    const locationID = Object.keys(locations)[currentIndex]; \r\n\r\n                    if (location[\"Latitude\"] === null) {\r\n                        return \"\"\r\n                    } else {\r\n                        return (\r\n                            <Marker \r\n                                key={locationID}\r\n                                position={[location[\"Latitude\"], location[\"Longitude\"]]}\r\n                                onClick={() => {\r\n                                    setSelectedLocation(location);\r\n                                    setSelectedLocationID(location[\"PWSID\"]);\r\n                                    console.log(location);\r\n                                    console.log(locationID);\r\n                                }}\r\n                                icon={determineRisk(location[\"Percentile\"], location[\"Checks\"])}\r\n                            >\r\n                                <Popup>\r\n                                    <LocationInfoPopup \r\n                                        name={location[\"Native Name\"]} \r\n                                        rank={location[\"Rank\"]}\r\n                                        totalRank={location[\"Total Rank\"]}\r\n                                        violations={location[\"Native Violations\"]}\r\n                                        selectedLocationID={location[\"PWSID\"].toString()}\r\n                                    />\r\n                                </Popup>\r\n                            </Marker>\r\n                        )\r\n                    }\r\n                }) : \"\"}\r\n                {/* {selectedLocation && (\r\n                    <Popup\r\n                        position={[selectedLocation[\"Latitude\"], selectedLocation[\"Longitude\"]]}\r\n                        onClose={() => {\r\n                            setSelectedLocation(null);\r\n                        }}\r\n                    >\r\n                        <LocationInfoPopup \r\n                            name={selectedLocation[\"Native Name\"]} \r\n                            rank={selectedLocation[\"Rank\"]}\r\n                            totalRank={selectedLocation[\"Total Rank\"]}\r\n                            violations={selectedLocation[\"Native Violations\"]}\r\n                            selectedLocationID={selectedLocationID.toString()}\r\n                        />\r\n                    </Popup>\r\n                )} */}\r\n            </MapContainer>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\context\\WaterContext.js",[],"C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\pages\\LocationWaterData.js",["96","97","98","99","100","101","102","103","104","105","106","107"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport logo from '../logo.svg';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\n// UI\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n// COMPONENTS\r\nimport { Menu } from '../components/Menu';\r\nimport { StandingPlace } from '../components/StandingPlace';\r\nimport { requirePropFactory } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\n\r\n// CONTEXT\r\nimport { WaterContext } from '../context/WaterContext';\r\n\r\nconst useStyles = makeStyles({\r\n    leftRoot: {\r\n      minWidth: 275,\r\n      marginLeft: 30,\r\n    },\r\n    leftBottomRoot: {\r\n        minWidth: 275,\r\n        marginLeft: 30,\r\n        marginTop: 15,\r\n    },\r\n    rightRoot: {\r\n        minWidth: 275,\r\n        marginRight: 20,\r\n        marginBottom: 20,\r\n    },\r\n});\r\n\r\nexport const LocationWaterData = (props) => {\r\n    const { locationID } = useParams();\r\n    const { locations } = useContext(WaterContext);\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [locationData, setLocationData] = useState({});\r\n    const [embedLinks, setEmbedLinks] = useState([]);\r\n    const [violationsAmounts, setViolationsAmounts] = useState([]); \r\n    const [violationsNames, setViolationsNames] = useState([]); \r\n\r\n    const classes = useStyles();\r\n\r\n    const sortViolations = (vnames, vamounts) => {\r\n        const violationNames = vnames;\r\n        const violationAmounts = vamounts;\r\n        console.log(violationNames);\r\n        console.log(violationAmounts);\r\n\r\n        let combinedList = [];\r\n        for (let i = 0; i < violationNames.length; i++) {\r\n            combinedList.push({ \"violationName\": violationNames[i], \"violationAmount\": violationAmounts[i]});\r\n        };\r\n\r\n        combinedList.sort((a, b) => {\r\n            return ((a.violationName < b.violationName) ? -1 : ((a.violationName == b.violationName) ? 0 : 1));\r\n        });\r\n\r\n        for (let j = 0; j < combinedList.length; j++) {\r\n            violationNames[j] = combinedList[j].violationName; \r\n            violationAmounts[j] = combinedList[j].violationAmount; \r\n        }\r\n\r\n        return [violationNames, violationAmounts];\r\n    }\r\n\r\n    useEffect(() => {\r\n        Object.values(locations).map((location) => {\r\n            if (location[\"PWSID\"] === locationID) {\r\n                setLocationData(location);\r\n                setEmbedLinks(location[\"Embed\"]);\r\n                console.log(location[\"Non-Native Names\"]);\r\n                \r\n                location[\"Non-Native Names\"].reverse();\r\n                location[\"Non-Native Violations\"].reverse();\r\n                \r\n                location[\"Non-Native Names\"].splice(location[\"Rank\"] - 1, 0, location[\"Native Name\"]);\r\n                location[\"Non-Native Violations\"].splice(location[\"Rank\"] - 1, 0, location[\"Native Violations\"]); \r\n                \r\n                console.log(location[\"Non-Native Names\"]); \r\n                console.log(location[\"Non-Native Violations\"]); \r\n                \r\n                setViolationsNames(location[\"Non-Native Names\"]);\r\n                setViolationsAmounts(location[\"Non-Native Violations\"]); \r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"data-page-container\">\r\n            <Drawer \r\n                anchor='left' \r\n                open={menuOpen} \r\n                onClose={() => setMenuOpen(false)}\r\n                style={{ overflow: 'hidden' }}\r\n            >\r\n                <div>\r\n                    <div className=\"row\">\r\n                        <MenuRoundedIcon\r\n                            className=\"menu-icon\"\r\n                            style={{ fontSize: 30 }}\r\n                            onClick={() => setMenuOpen(false)}\r\n                        ></MenuRoundedIcon>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <img src={logo} className=\"menu-logo\" />\r\n                        <h1 className=\"menu-header\">PURIFY</h1>\r\n                        <div className=\"menu-buttons-container\">\r\n                            <Link to=\"/\" className=\"menu-buttons\">HOME</Link>\r\n                            <Link to=\"/map\" className=\"menu-buttons\">WATER MAP</Link>\r\n                        </div>\r\n                    </div>\r\n                    <p \r\n                        className=\"menu-water-header\"\r\n                    >\r\n                        CA Water Data Challenge\r\n                    </p>\r\n                    <p \r\n                        className=\"menu-names\"\r\n                    >\r\n                        Ansh Motiani, Aditya Gupta, <br /> Samhith Kakarla\r\n                    </p>\r\n                </div>\r\n            </Drawer>\r\n            <div>\r\n                <MenuRoundedIcon\r\n                    style={{ fontSize: 50, marginLeft: 30, marginTop: 10, display: 'inline-block' }}\r\n                    onClick={() => setMenuOpen(true)}\r\n                ></MenuRoundedIcon>\r\n                <ArrowBackIosIcon\r\n                    style={{ fontSize: 40, marginLeft: 30, marginTop: 10, marginBottom: 5, display: 'inline-block' }}\r\n                    onClick={() => props.history.push('/map')}\r\n                >\r\n                </ArrowBackIosIcon>\r\n            </div>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <Card className={classes.leftRoot}>\r\n                        <h1 className=\"area-data-header\">NATIVE AREA NAME</h1>\r\n                        <p className=\"area-data-value\">{locationData[\"Native Name\"]}</p>\r\n                        <h1 className=\"area-data-header\">RANK</h1>\r\n                        <p className=\"area-data-value\">{locationData[\"Rank\"]} / {locationData[\"Total Rank\"]}</p>\r\n                        <h1 className=\"area-data-header\"># OF VIOLATIONS</h1>\r\n                        <p className=\"area-data-value\">{locationData[\"Native Violations\"]}</p>\r\n                    </Card>\r\n                    <Card className={classes.leftBottomRoot}>\r\n                        <h1 className=\"violations-header\">VIOLATIONS RANKING</h1>\r\n                        {/* {() => {\r\n                            const violationsNames = sortViolations(locationData[\"Non-Native Names\"], locationData[\"Non-Native Violations\"])[0]; \r\n                            const violationsAmounts = sortViolations(locationData[\"Non-Native Names\"], locationData[\"Non-Native Violations\"])[1];\r\n                            console.log(violationsNames);\r\n                            console.log(violationsAmounts);\r\n\r\n                            violationsNames.map((name) => {\r\n                                const nameIndex = violationsNames.indexOf(name);\r\n                                const violationAmount = violationsAmounts[nameIndex];\r\n                                return (\r\n                                    <StandingPlace\r\n                                        rank={nameIndex + 1}\r\n                                        violationName={name}\r\n                                        violationAmount={violationAmount}\r\n                                    />\r\n                                )\r\n                            }); \r\n                        }} */}\r\n                        {violationsNames.map((name) => {\r\n                            const nameIndex = violationsNames.indexOf(name);\r\n                            const violationAmount = violationsAmounts[nameIndex];\r\n                            return (\r\n                                <StandingPlace\r\n                                    number={nameIndex + 1}\r\n                                    violationName={name}\r\n                                    violationAmount={violationAmount}\r\n                                    nativeViolation={nameIndex === locationData[\"Rank\"] - 1 ? true : false}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Card className={classes.rightRoot}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <div>\r\n                                    <iframe \r\n                                        id=\"igraph\" \r\n                                        scrolling=\"no\" \r\n                                        style={{ border: \"none\" }} \r\n                                        seamless=\"seamless\" \r\n                                        src={embedLinks[3]} \r\n                                        height=\"525\" \r\n                                        width=\"100%\"\r\n                                        logo=\"false\"\r\n                                        link=\"false\"\r\n                                        modebar=\"false\"\r\n                                    >\r\n                                    </iframe>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <div>\r\n                                    <iframe \r\n                                        id=\"igraph\" \r\n                                        scrolling=\"no\" \r\n                                        style={{ border: \"none\" }} \r\n                                        seamless=\"seamless\" \r\n                                        src={embedLinks[0]} \r\n                                        height=\"525\" \r\n                                        width=\"100%\"\r\n                                        logo=\"false\"\r\n                                        link=\"false\"\r\n                                        modebar=\"false\"\r\n                                    >\r\n                                    </iframe>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <div>\r\n                                    <iframe \r\n                                        id=\"igraph\" \r\n                                        scrolling=\"no\" \r\n                                        style={{ border: \"none\" }} \r\n                                        seamless=\"seamless\" \r\n                                        src={embedLinks[1]} \r\n                                        height=\"525\" \r\n                                        width=\"100%\"\r\n                                        logo=\"false\"\r\n                                        link=\"false\"\r\n                                        modebar=\"false\"\r\n                                    >\r\n                                    </iframe>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <div>\r\n                                    <iframe \r\n                                        id=\"igraph\" \r\n                                        scrolling=\"no\" \r\n                                        style={{ border: \"none\" }} \r\n                                        seamless=\"seamless\" \r\n                                        src={embedLinks[2]} \r\n                                        height=\"525\" \r\n                                        width=\"100%\"\r\n                                        logo=\"false\"\r\n                                        link=\"false\"\r\n                                        modebar=\"false\"\r\n                                    >\r\n                                    </iframe>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\components\\LocationInfoPopup.js",[],"C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\components\\Legend.js",["108","109","110","111","112"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport '../App.css';\r\n\r\n// COMPONENTS\r\nimport greenIcon from '../images/green_water_icon.png'; \r\nimport yellowIcon from '../images/yellow_water_icon.png';\r\nimport redIcon from '../images/red_water_icon.png';\r\nimport grayIcon from '../images/gray_water_icon.png'; \r\n\r\nexport const Legend = () => {\r\n\r\n    return (\r\n        <div className=\"legend-container\">\r\n            <h1 className=\"legend-title\" >WATER QUALITY RANK</h1>\r\n            <div className=\"row\">\r\n                <img src={redIcon} className=\"legend-icon\" />\r\n                <p className=\"legend-description\" >\r\n                    Relatively High Risk\r\n                </p>\r\n            </div>\r\n            <div className=\"row\">\r\n                <img src={yellowIcon} className=\"legend-icon\"  />\r\n                <p className=\"legend-description\">\r\n                    Relatively Moderate Risk\r\n                </p>\r\n            </div>\r\n            <div className=\"row\">\r\n                <img src={greenIcon} className=\"legend-icon\"  />\r\n                <p className=\"legend-description\">\r\n                    Relatively Low Risk\r\n                </p>\r\n            </div>\r\n            <div className=\"row\">\r\n                <img src={grayIcon} className=\"legend-icon\" />\r\n                <p className=\"legend-description\">\r\n                    NO DATA FOUND\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\components\\Menu.js",["113"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\n// UI\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\n\r\nexport const Menu = ({ closeMenu }) => {\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <MenuRoundedIcon\r\n                    style={{ fontSize: 50 }}\r\n                ></MenuRoundedIcon>\r\n            </div>\r\n            <div className=\"row\">\r\n                <img src={logo} className=\"menu-logo\" />\r\n                <h1 className=\"menu-header\">PURIFY</h1>\r\n                <div className=\"menu-buttons-container\">\r\n                    <Link \r\n                        to=\"/\"\r\n                        className=\"menu-buttons\"\r\n                    >\r\n                        HOME\r\n                    </Link>\r\n                    <Link \r\n                        to=\"/map\"\r\n                        className=\"menu-buttons\"\r\n                    >\r\n                        WATER MAP\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <p>CA Water Data Challenge</p>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\components\\StandingPlace.js",[],"C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\components\\NameCard.js",["114","115"],"import React from 'react'; \r\nimport { makeStyles, StylesProvider } from '@material-ui/core/styles';\r\nimport '../App.css'; \r\n\r\n// COMPONENTS\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    picture: {\r\n        height: 185, \r\n        marginTop: 10, \r\n        float: 'left',\r\n        marginLeft: 20, \r\n    }, \r\n    nameHeader: {\r\n        fontSize: 30,\r\n        float: 'left', \r\n        marginLeft: 30,  \r\n        display: 'inline-block', \r\n        color: 'white', \r\n        marginBottom: 35, \r\n    }, \r\n    school: {\r\n        display: 'inline-block', \r\n        marginTop: -2, \r\n        float: 'left', \r\n        marginLeft: 30,  \r\n        color: 'white', \r\n        fontSize: 20, \r\n    }, \r\n    role: {\r\n        display: 'inline-block', \r\n        marginTop: -1,\r\n        float: 'left', \r\n        marginLeft: 30,  \r\n        color: 'white', \r\n    }\r\n}));\r\n\r\nexport const NameCard = ({ picture, name, school, role }) => {\r\n    const classes = useStyles(); \r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paper} id=\"name-card-container\">\r\n                <img \r\n                    src={picture} \r\n                    className={classes.picture}\r\n                />\r\n                <div>\r\n                    <h1 className={classes.nameHeader} id=\"home-name-header\">{name}</h1>\r\n                    <p className={classes.school} id=\"home-school-header\">{school}</p>\r\n                    <p className={classes.role} id=\"home-role-header\">{role}</p>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\components\\InfoAccordian.js",[],"C:\\Users\\Samhith Kakarla\\Desktop\\CA Water Data Challenge\\Purify\\frontend\\src\\components\\WelcomeModal.js",["116","117"],{"ruleId":"118","severity":1,"message":"119","line":3,"column":35,"nodeType":"120","messageId":"121","endLine":3,"endColumn":43},{"ruleId":"118","severity":1,"message":"122","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":23},{"ruleId":"118","severity":1,"message":"123","line":4,"column":25,"nodeType":"120","messageId":"121","endLine":4,"endColumn":40},{"ruleId":"118","severity":1,"message":"124","line":8,"column":10,"nodeType":"120","messageId":"121","endLine":8,"endColumn":24},{"ruleId":"118","severity":1,"message":"125","line":16,"column":7,"nodeType":"120","messageId":"121","endLine":16,"endColumn":13},{"ruleId":"118","severity":1,"message":"126","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":17},{"ruleId":"118","severity":1,"message":"127","line":14,"column":10,"nodeType":"120","messageId":"121","endLine":14,"endColumn":14},{"ruleId":"118","severity":1,"message":"128","line":18,"column":8,"nodeType":"120","messageId":"121","endLine":18,"endColumn":13},{"ruleId":"118","severity":1,"message":"129","line":26,"column":10,"nodeType":"120","messageId":"121","endLine":26,"endColumn":16},{"ruleId":"130","severity":1,"message":"131","line":40,"column":7,"nodeType":"132","messageId":"133","endLine":40,"endColumn":13},{"ruleId":"134","severity":1,"message":"135","line":58,"column":8,"nodeType":"136","endLine":58,"endColumn":10,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":85,"column":25,"nodeType":"140","endLine":85,"endColumn":65},{"ruleId":"141","severity":1,"message":"142","line":112,"column":17,"nodeType":"140","endLine":121,"endColumn":18},{"ruleId":"138","severity":1,"message":"139","line":182,"column":29,"nodeType":"140","endLine":182,"endColumn":114},{"ruleId":"118","severity":1,"message":"143","line":1,"column":39,"nodeType":"120","messageId":"121","endLine":1,"endColumn":48},{"ruleId":"118","severity":1,"message":"126","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":17},{"ruleId":"118","severity":1,"message":"127","line":12,"column":10,"nodeType":"120","messageId":"121","endLine":12,"endColumn":14},{"ruleId":"118","severity":1,"message":"144","line":15,"column":8,"nodeType":"120","messageId":"121","endLine":15,"endColumn":15},{"ruleId":"118","severity":1,"message":"145","line":19,"column":8,"nodeType":"120","messageId":"121","endLine":19,"endColumn":17},{"ruleId":"118","severity":1,"message":"146","line":28,"column":24,"nodeType":"120","messageId":"121","endLine":28,"endColumn":36},{"ruleId":"138","severity":1,"message":"139","line":43,"column":17,"nodeType":"140","endLine":43,"endColumn":61},{"ruleId":"138","severity":1,"message":"139","line":47,"column":17,"nodeType":"140","endLine":47,"endColumn":64},{"ruleId":"138","severity":1,"message":"139","line":51,"column":17,"nodeType":"140","endLine":51,"endColumn":63},{"ruleId":"138","severity":1,"message":"139","line":74,"column":25,"nodeType":"140","endLine":74,"endColumn":65},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"118","severity":1,"message":"151","line":22,"column":10,"nodeType":"120","messageId":"121","endLine":22,"endColumn":28},{"ruleId":"118","severity":1,"message":"152","line":28,"column":12,"nodeType":"120","messageId":"121","endLine":28,"endColumn":28},{"ruleId":"118","severity":1,"message":"153","line":29,"column":12,"nodeType":"120","messageId":"121","endLine":29,"endColumn":30},{"ruleId":"138","severity":1,"message":"139","line":83,"column":25,"nodeType":"140","endLine":83,"endColumn":65},{"ruleId":"138","severity":1,"message":"139","line":112,"column":25,"nodeType":"140","endLine":112,"endColumn":64},{"ruleId":"118","severity":1,"message":"126","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":17},{"ruleId":"118","severity":1,"message":"127","line":14,"column":10,"nodeType":"120","messageId":"121","endLine":14,"endColumn":14},{"ruleId":"118","severity":1,"message":"151","line":16,"column":10,"nodeType":"120","messageId":"121","endLine":16,"endColumn":28},{"ruleId":"118","severity":1,"message":"154","line":51,"column":11,"nodeType":"120","messageId":"121","endLine":51,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":63,"column":82,"nodeType":"157","messageId":"133","endLine":63,"endColumn":84},{"ruleId":"158","severity":1,"message":"159","line":75,"column":49,"nodeType":"160","messageId":"161","endLine":75,"endColumn":51},{"ruleId":"134","severity":1,"message":"162","line":94,"column":8,"nodeType":"136","endLine":94,"endColumn":10,"suggestions":"163"},{"ruleId":"138","severity":1,"message":"139","line":113,"column":25,"nodeType":"140","endLine":113,"endColumn":65},{"ruleId":"141","severity":1,"message":"142","line":192,"column":37,"nodeType":"140","endLine":203,"endColumn":38},{"ruleId":"141","severity":1,"message":"142","line":209,"column":37,"nodeType":"140","endLine":220,"endColumn":38},{"ruleId":"141","severity":1,"message":"142","line":226,"column":37,"nodeType":"140","endLine":237,"endColumn":38},{"ruleId":"141","severity":1,"message":"142","line":243,"column":37,"nodeType":"140","endLine":254,"endColumn":38},{"ruleId":"118","severity":1,"message":"164","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":20},{"ruleId":"138","severity":1,"message":"139","line":17,"column":17,"nodeType":"140","endLine":17,"endColumn":62},{"ruleId":"138","severity":1,"message":"139","line":23,"column":17,"nodeType":"140","endLine":23,"endColumn":66},{"ruleId":"138","severity":1,"message":"139","line":29,"column":17,"nodeType":"140","endLine":29,"endColumn":65},{"ruleId":"138","severity":1,"message":"139","line":35,"column":17,"nodeType":"140","endLine":35,"endColumn":63},{"ruleId":"138","severity":1,"message":"139","line":18,"column":17,"nodeType":"140","endLine":18,"endColumn":57},{"ruleId":"118","severity":1,"message":"165","line":2,"column":22,"nodeType":"120","messageId":"121","endLine":2,"endColumn":36},{"ruleId":"138","severity":1,"message":"139","line":52,"column":17,"nodeType":"140","endLine":55,"endColumn":19},{"ruleId":"118","severity":1,"message":"166","line":29,"column":7,"nodeType":"120","messageId":"121","endLine":29,"endColumn":18},{"ruleId":"138","severity":1,"message":"139","line":62,"column":21,"nodeType":"140","endLine":62,"endColumn":63},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'CSSTransition' is defined but never used.","'TransitionGroup' is defined but never used.","'InteractiveMap' is defined but never used.","'routes' is assigned a value but never used.","'PropTypes' is defined but never used.","'Menu' is defined but never used.","'Paper' is defined but never used.","'Hidden' is defined but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array.","ArrayExpression",["167"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'useEffect' is defined but never used.","'SvgIcon' is defined but never used.","'ErrorIcon' is defined but never used.","'getLocations' is assigned a value but never used.","no-native-reassign",["168"],"no-negated-in-lhs",["169"],"'requirePropFactory' is defined but never used.","'selectedLocation' is assigned a value but never used.","'selectedLocationID' is assigned a value but never used.","'sortViolations' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'locationID' and 'locations'. Either include them or remove the dependency array.",["170"],"'makeStyles' is defined but never used.","'StylesProvider' is defined but never used.","'DialogTitle' is assigned a value but never used.",{"desc":"171","fix":"172"},"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},"Update the dependencies array to be: [getLocations]",{"range":"175","text":"176"},"Update the dependencies array to be: [locationID, locations]",{"range":"177","text":"178"},[1872,1874],"[getLocations]",[3455,3457],"[locationID, locations]"]